r1 = raster(x)
x = matrix(7:12, ncol = 3, byrow = TRUE)
x = matrix(7:12, ncol = 3, byrow = TRUE)
x
library(raster)
r1 = raster(x)
band1 = raster("./Data fies/landsat_15_10_1998.tif")
r1
x
band1 = raster("./Data files/landsat_15_10_1998.tif")
band1
band4 = raster("./Data files/landsat_15_10_1998.tif", band = 4)
band4 = raster("./Data files/landsat_15_10_1998.tif", band = 4)
band4
stack(band1, band4)
l_00 = brick("./Data files/landsat_04_10_2000.tif")
l_00
nrow(l_00)
ncol(l_00)
nlayers(l_00)
?sp
res(l_00)
proj4string(l_00)
CRS(proj4string(l_00))
proj4string(l_00) = NA
proj4string(l_00)
proj4string(l_00) =
CRS("+proj=utm +zone=36 +ellps=WGS84 +units=m +no_defs")
proj4string(l_00)
l1 = raster("./Data files/landsat_15_10_1998.tif")
CRS(proj4string(l1))
proj4string(l_00) = CRS(proj4string(l1))
names(l_00)
names(l_00) = paste("Band", 1:6, sep = "_")
names(l_00)
hist(l_00)
png("./Data files/4367OS_04_01.png",width=5.5,height=4,units="in",res=300)
hist(l_00)
library(rasterVis)
levelplot(l_00, par.settings = RdBuTheme, contour = FALSE)
r = brick("./Data files/modis.tif")
r
nlayers(r)
dim(r)
getGDALDriverNames()$name
library(rgdal)
getGDALDriverNames()$name
r
library(foreign)
zctaDBF <- read.dbf("C:/Dev/ACSdata/2016/TIGERdata/tl_2016_us_zcta510/tl_2016_us_zcta510.dbf",
as.is = TRUE)
head(zctaDBF)
str(zctaDBF)
countyDBF <- read.dbf("C:/Dev/ACSdata/2016/TIGERdata/tl_2016_us_county/tl_2016_us_county.dbf",
as.is = TRUE)
head(countyDBF)
stateDBF <- read.dbf("C:/Dev/ACSdata/2016/TIGERdata/tl_2016_us_state/tl_2016_us_state.dbf",
as.is = TRUE)
head(stateDBF)
getwd  ()
install.packages(c("dplyr", "igraph", "sperrorest"))
addresses = c(
"2200 Sunport Blvd, Albuquerque, NM 87106, USA",
"7401 Paseo Del Volcan Northwest Albuquerque, NM 87121, USA",
"121 Aviation Dr, Santa Fe, NM 87507, USA")
addresses
library(ggmap)
airports = geocode(addresses)
airports
airports$name = c("Albuquerque International",
"Double Eagle II",
"Santa Fe Municipal")
airports
str(airports)
class(airports)
library(sp)
coordinates(airports) = ~ lon + lat
class(airports)
airports
?proj4string
proj4string(airports) = CRS("+proj=longlat +datum=WGS84")
airports
class(airports)
library(rgdal)
writeOGR(airports, "./Data files", "airportsJF", "ESRI Shapefile")
airportsJF = readOGR("./Data files",
"airportsJF",
stringsAsFactors = FALSE)
airportsJF
airports
track = readOGR("./Data files/GPS_log.gpx", "tracks")
class(track)
track
county = readOGR("./Data files", "USA_2_GADM_fips",
stringsAsFactors = FALSE)
county
head(county$data)
head(county[[1]])
head(county[[data]])
head(county[["data"]])
head(county[[1]])
head(county[[1:2]])
dim(county[[1]])
class(county[[1]])
head(county[[c(1,2,3)]])
summary(county)
summary(airports)
proj4string(airports)
length(airports)
length(county)
row.names(airports)
dimensions(airports)
head(row.names(county))
dimensions(county)
nrow(county)
ncol(county)
dim(county)
county$NAME_2[1:10]
unique(county$TYPE_2)
airports@data
head(county@data)
str(airports)
airports_sp = as(airports, "SpatialPoints")
airports_sp@data
airports_sp@coords
as(airports_sp, "SpatialPointsDataFrame")@data
as(airports_sp, "SpatialPointsDataFrame")@coords
head(county@data)
as(airports_sp, "SpatialPointsDataFrame")@data
install.packages(c("acs", "curl", "igraph", "mboost", "meta"))
# polygons
county = readOGR("./Data files", "USA_2_GADM_fips",
stringsAsFactors = FALSE)
library(sp)
library(rgdal)
# polygons
county = readOGR("./Data files", "USA_2_GADM_fips",
stringsAsFactors = FALSE)
dimensions(county)
head(row.names(county))
nrow(county)
ncol(county)
head(county@data)
unique(county$TYPE_2)
library(rgeos)
county_nv_ut = county[county$NAME_1 %in% c("Nevada", "Utah"), ]
head(county_nv_ut@data)
dim(county_nv_ut)
county_nv_ut@data
states = gUnaryUnion(county_nv_ut, id = county_nv_ut$NAME_1)
row.names(states)
plot(county_nv_ut, border = "lightgrey", lty = "dotted")
plot(states, add = TRUE)
county_ctr = gCentroid(county_nv_ut, byid = TRUE)
text(county_ctr, county_nv_ut$NAME_2, cex = 1.5)
?text
sp.text(county_ctr, county_nv_ut$NAME_2, cex = 1.5)
graphics.text(county_ctr, county_nv_ut$NAME_2, cex = 1.5)
county_ctr@coords
county_ctr@coords["x"]
county_ctr@coords$x
class(county_ctr@coords)
county_ctr@coords[,1]
text(county_ctr@coords[,1], county_ctr@coords[,2], county_nv_ut$NAME_2, cex = 1.5)
?lty
??lty
?plot
plot(county_nv_ut, border = "lightgrey", lty = "dotted")
plot(states, add = TRUE)
text(county_ctr@coords[,1], county_ctr@coords[,2], county_nv_ut$NAME_2, cex = 0.8)
airports$name = c("Albuquerque International",
"Double Eagle II",
"Santa Fe Municipal")
airports
library(sp)
coordinates(airports) = ~ lon + lat
class(airports)
addresses = c(
"2200 Sunport Blvd, Albuquerque, NM 87106, USA",
"7401 Paseo Del Volcan Northwest Albuquerque, NM 87121, USA",
"121 Aviation Dr, Santa Fe, NM 87507, USA")
library(ggmap)
airports = geocode(addresses)
airports
class(airports)
install.packages(c("geojsonio", "ggjoy", "modelr"))
addresses = c(
"2200 Sunport Blvd, Albuquerque, NM 87106, USA",
"7401 Paseo Del Volcan Northwest Albuquerque, NM 87121, USA",
"121 Aviation Dr, Santa Fe, NM 87507, USA")
library(ggmap)
airports = geocode(addresses)
airports
class(airports)
airports$name = c("Albuquerque International",
"Double Eagle II",
"Santa Fe Municipal")
airports
library(sp)
coordinates(airports) = ~ lon + lat
class(airports)
airports
proj4string(airports) = CRS("+proj=longlat +datum=WGS84")
# polygons
county = readOGR("./Data files", "USA_2_GADM_fips",
stringsAsFactors = FALSE)
library(rgdal)
# polygons
county = readOGR("./Data files", "USA_2_GADM_fips",
stringsAsFactors = FALSE)
summary(county)
length(county)
head(row.names(county))
dimensions(county)
summary(airports)
addresses = c(
"2200 Sunport Blvd, Albuquerque, NM 87106, USA",
"7401 Paseo Del Volcan Northwest Albuquerque, NM 87121, USA",
"121 Aviation Dr, Santa Fe, NM 87507, USA")
library(ggmap)
airports = geocode(addresses)
airports
class(airports)
airports$name = c("Albuquerque International",
"Double Eagle II",
"Santa Fe Municipal")
airports
library(sp)
coordinates(airports) = ~ lon + lat
class(airports)
airports
proj4string(airports) = CRS("+proj=longlat +datum=WGS84")
# Write the shapefile to disk
library(rgdal)
writeOGR(airports, "./Data files", "airportsJF", "ESRI Shapefile")
# read the shapefile from disk
airportsJF = readOGR("./Data files",
"airportsJF",
stringsAsFactors = FALSE)
# lines
track = readOGR("./Data files/GPS_log.gpx", "tracks")
class(track)
# polygons
county = readOGR("./Data files", "USA_2_GADM_fips",
stringsAsFactors = FALSE)
summary(county)
length(county)
head(row.names(county))
dimensions(county)
# Exploring Vector Layer Properties and Subsetting
summary(airports)
proj4string(airports)
length(airports)
row.names(airports)
dimensions(airports)
# Back to the county polygons
nrow(county)
ncol(county)
dim(county)
head(county@data)
county$NAME_2[1:10]
unique(county$TYPE_2)
airports@data
head(county@data)
str(airports)
airports_sp = as(airports, "SpatialPoints")
airports_sp@coords
as(airports_sp, "SpatialPointsDataFrame")@data
county = county[
county$NAME_1 != "Alaska" &
county$NAME_1 != "Hawaii", ]
county = county[
!(county$NAME_1 %in%
c("Alaska", "Hawaii")), ]
county = county[county$TYPE_2 != "Water body", ]
################
# Figure 05_01 #
################
png("C:\\Data\\4367OS_05_01.png",width=5.5,height=4.5,units="in",res=300,pointsize=5)
plot(county)
dev.off()
newProj = CRS("+proj=laea +lat_0=45 +lon_0=-100
+x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs")
county = spTransform(county, newProj)
################
# Figure 05_02 #
################
png("C:\\Data\\4367OS_05_02.png",width=5.5,height=4.5,units="in",res=300,pointsize=5)
plot(county)
dev.off()
library(raster)
l_03 = brick("C:\\Data\\landsat_11_09_2003.tif")
track = spTransform(track, CRS(proj4string(l_03)))
################
# Figure 05_03 #
################
png("C:\\Data\\4367OS_05_03.png",width=3.95,height=5.5,units="in",res=300)
plotRGB(l_03, r = 3, g = 2, b = 1, stretch = "lin",
ext = extent(track) + 10000)
plot(track, add = TRUE, col = "yellow")
dev.off()
# Working with the geometrical properties of vector layers
coordinates(airports)
library(rgeos)
gArea(county) / 1000^2
county$area = gArea(county, byid = TRUE) / 1000^2
head(county@data)
county_nv_ut = county[county$NAME_1 %in% c("Nevada", "Utah"), ]
head(county_nv_ut@data)
dim(county_nv_ut)
states = gUnaryUnion(county_nv_ut, id = county_nv_ut$NAME_1)
row.names(states)
dev.on()
dev.off()
plot(county_nv_ut, border = "lightgrey", lty = "dotted")
proj4string(airports)
proj4string(county)
addresses = c(
"2200 Sunport Blvd, Albuquerque, NM 87106, USA",
"7401 Paseo Del Volcan Northwest Albuquerque, NM 87121, USA",
"121 Aviation Dr, Santa Fe, NM 87507, USA")
library(ggmap)
airports = geocode(addresses)
airports
class(airports)
airports$name = c("Albuquerque International",
"Double Eagle II",
"Santa Fe Municipal")
airports
library(sp)
coordinates(airports) = ~ lon + lat
class(airports)
airports
proj4string(airports) = CRS("+proj=longlat +datum=WGS84")
# Write the shapefile to disk
library(rgdal)
writeOGR(airports, "./Data files", "airportsJF", "ESRI Shapefile")
# read the shapefile from disk
airportsJF = readOGR("./Data files",
"airportsJF",
stringsAsFactors = FALSE)
# lines
track = readOGR("./Data files/GPS_log.gpx", "tracks")
class(track)
# polygons
county = readOGR("./Data files", "USA_2_GADM_fips",
stringsAsFactors = FALSE)
summary(county)
length(county)
head(row.names(county))
dimensions(county)
# Exploring Vector Layer Properties and Subsetting
summary(airports)
proj4string(airports)
length(airports)
row.names(airports)
dimensions(airports)
# Back to the county polygons
nrow(county)
ncol(county)
dim(county)
head(county@data)
county$NAME_2[1:10]
unique(county$TYPE_2)
airports@data
head(county@data)
str(airports)
airports_sp = as(airports, "SpatialPoints")
airports_sp@coords
as(airports_sp, "SpatialPointsDataFrame")@data
county = county[
county$NAME_1 != "Alaska" &
county$NAME_1 != "Hawaii", ]
county = county[
!(county$NAME_1 %in%
c("Alaska", "Hawaii")), ]
county = county[county$TYPE_2 != "Water body", ]
################
# Figure 05_01 #
################
#png("C:\\Data\\4367OS_05_01.png",width=5.5,height=4.5,units="in",res=300,pointsize=5)
plot(county)
#dev.off()
newProj = CRS("+proj=laea +lat_0=45 +lon_0=-100
+x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs")
county = spTransform(county, newProj)
################
# Figure 05_02 #
################
#png("C:\\Data\\4367OS_05_02.png",width=5.5,height=4.5,units="in",res=300,pointsize=5)
plot(county)
#dev.off()
library(raster)
l_03 = brick("C:\\Data\\landsat_11_09_2003.tif")
track = spTransform(track, CRS(proj4string(l_03)))
################
# Figure 05_03 #
################
#png("C:\\Data\\4367OS_05_03.png",width=3.95,height=5.5,units="in",res=300)
plotRGB(l_03, r = 3, g = 2, b = 1, stretch = "lin",
ext = extent(track) + 10000)
plot(track, add = TRUE, col = "yellow")
#dev.off()
# Working with the geometrical properties of vector layers
coordinates(airports)
library(rgeos)
gArea(county) / 1000^2
county$area = gArea(county, byid = TRUE) / 1000^2
head(county@data)
county_nv_ut = county[county$NAME_1 %in% c("Nevada", "Utah"), ]
head(county_nv_ut@data)
dim(county_nv_ut)
states = gUnaryUnion(county_nv_ut, id = county_nv_ut$NAME_1)
row.names(states)
proj4string(airports)
proj4string(county)
plot(county_nv_ut, border = "lightgrey", lty = "dotted")
plot(states, add = TRUE)
county_ctr = gCentroid(county_nv_ut, byid = TRUE)
class(county_ctr@coords)
county_ctr@coords[,1]
text(county_ctr@coords[,1], county_ctr@coords[,2], county_nv_ut$NAME_2, cex = 0.8)
airports = spTransform(airports, CRS(proj4string(county)))
summary(county)
summary(airports)
nm = county[county$NAME_1 == "New Mexico", ]
summary(nm)
nm@data
airports@data
plot(nm)
plot(airports, col = "red", pch = 16, add = TRUE)
over(airports, nm)
aitports@data
airports@data
no@data
nm@data
airports@coords
nm@coords
nm@polygons
summary(nm)
over(airports, nm)
cbind(airports@data, over(airports, nm))
text(airports$name)
text(airports$name)
text(airports@data$name)
airports@data
summary(airports)
cbind(airports@data, over(airports, nm))
plot(nm[airports, ])
plot(airports, add = TRUE, col = "red", pch = 16, cex = 1.5)
text(airports, airports$name, pos = 1)
nm@bbox
airports@bbox
?cbind
cbind(airports@data, over(airports, nm))
summary(nm)
nm[airports, ]
airports
summary(airports)
airports@data
coordinates(airports)
coordinates(nm)
boundary = readOGR("./Data files/", "CTYUA_DEC_2013_EW_BFE")
getwd()
boundary = readOGR("./Data files", "CTYUA_DEC_2013_EW_BFE")
proj4string(boundary)
buildings = readOGR("./Data files", "london_buildings")
natural = readOGR("./Data files", "london_natural")
proj4string(buildings)
proj4string(natural)
proj4string(boundary)
buildings = spTransform(buildings, CRS(proj4string(boundary)))
proj4string(buildings)
natural = spTransform(natural, CRS(proj4string(boundary)))
city = boundary[boundary$CTYUA13NM == "City of London", ]
dim(city)
summary(city)
in_city = gContains(city, buildings, byid = TRUE)
class(in_city)
dim(in_city)
head(in_city)
head(in_city[,1])
buildings = buildings[in_city[,1], ]
river = natural[natural$type == "riverbank", ]
river = gUnaryUnion(river)
plot(buildings, col = "sandybrown")
plot(river, col = "lightblue", add = TRUE)
plot(boundary, border = "dimgrey", add = TRUE)
haifa_buildings = readOGR("./Data files", "haifa_buildings")
haifa_natural = readOGR("./Data files", "haifa_natural")
israel_adm = getData("GADM", country = "ISR", level = 1)
haifa_adm = israel_adm[israel_adm$NAME_1 == "Haifa", ]
haifa_adm = spTransform(haifa_adm, CRS(proj4string(l_03)))
l_03 = brick("./Data files/landsat_11_09_2003.tif")
haifa_adm = spTransform(haifa_adm, CRS(proj4string(l_03)))
haifa_buildings =
spTransform(haifa_buildings, CRS(proj4string(l_03)))
haifa_natural =
spTransform(haifa_natural, CRS(proj4string(l_03)))
plot(haifa_natural, col = "lightgreen")
plot(haifa_buildings, add = TRUE)
plot(haifa_adm, add = TRUE)
buildings_ch = gConvexHull(haifa_buildings)
buildings_ch = gIntersection(buildings_ch, haifa_adm)
haifa_natural = gUnaryUnion(haifa_natural)
haifa_natural = gIntersection(haifa_natural, buildings_ch)
buildings_50m = gBuffer(haifa_buildings, width = 50)
haifa_natural = gDifference(haifa_natural, buildings_50m)
plot(buildings_ch, col = "lightgrey", border = "lightgrey")
plot(haifa_adm, add = TRUE)
plot(haifa_natural, col = "lightgreen", add = TRUE)
plot(haifa_buildings, add = TRUE)
